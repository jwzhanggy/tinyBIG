configurations:
  device: &device mps
  random_seed: 1234

  data_configs:
    data_class: tinybig.data.iris
    data_parameters:
      name: iris
      train_batch_size: 1000
      test_batch_size: 1000

  learner_configs:
    learner_class: tinybig.learner.backward_learner
    learner_parameters:
      name: error_backward_propagation
      n_epochs: 1000
      optimizer_configs:
        optimizer_class: torch.optim.AdamW
        optimizer_parameters:
          lr: 3.0e-02
          weight_decay: 1.0e-05
      loss_configs:
        loss_class: torch.nn.MSELoss
        loss_parameters:
          reduction: mean

  model_configs:
    model_class: tinybig.model.rpn
    model_parameters:
      device: *device
      name: reconciled_polynomial_network
      depth: 1
      depth_alloc: [1]
      layer_configs:
        - layer_class: tinybig.module.rpn_layer
          layer_parameters:
            name: rpn_layer
            m: 4
            n: 1
            width: 1
            width_alloc: [1]
            head_configs:
              - head_class: tinybig.module.rpn_head
                head_parameters:
                  l: null
                  channel_num: 1
                  data_transformation_configs:
                    function_class: tinybig.expansion.naive_laplace_expansion
                    function_parameters:
                      name: naive_laplace_expansion
                  parameter_fabrication_configs:
                    function_class: tinybig.reconciliation.identity_reconciliation
                    function_parameters:
                      name: identity_reconciliation
                  remainder_configs:
                    function_class: tinybig.remainder.linear_remainder
                    function_parameters:
                      name: linear_remainder
                      require_parameters: True
  metric_configs:
    metric_class: tinybig.metric.mse
    metric_parameters:
      name: mse

  output_configs:
    output_class: tinybig.output.rpn_output
    output_parameters:
      name: prediction_output